{"version":3,"sources":["pages/styles/home-styles.tsx","components/form/index.tsx","pages/home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styled","div","PageWrapper","section","ErrorDiv","Div","INITIAL_VALUES","name","lastName","gia9x5","gia9x4","gia9x3","gia9x2","gia9x1","FormSchema","Yup","shape","required","typeError","ResultForm","initialValues","validationSchema","onSubmit","values","console","log","errors","touched","handleChange","handleBlur","handleSubmit","Form","Group","controlId","Label","Control","type","placeholder","onChange","onBlur","value","className","InputGroup","size","Prepend","Text","id","Button","HomePage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.60048347.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FlexWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PageWrapper = styled.section`\r\n  padding: 10px;\r\n  max-width: 40%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ErrorDiv = styled.div`\r\n  color: red;\r\n`;\r\n\r\nexport const Div = styled.div``;","import React from 'react';\r\nimport {Field, Formik, Form as FormikForm} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Button, Form, FormControl, InputGroup} from \"react-bootstrap\";\r\nimport {Div, ErrorDiv} from \"../../pages/styles/home-styles\";\r\n\r\nconst INITIAL_VALUES = {\r\n    name: '',\r\n    lastName: '',\r\n    gia9x5: 0,\r\n    gia9x4: 0,\r\n    gia9x3: 0,\r\n    gia9x2: 0,\r\n    gia9x1: 0,\r\n}\r\n\r\nconst FormSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .required('Обязательное поле'),\r\n    lastName: Yup.string()\r\n        .required('Обязательное поле'),\r\n    gia9x5: Yup.number()\r\n        .typeError('Должен быть номер'),\r\n    gia9x4: Yup.number(),\r\n    gia9x3: Yup.number(),\r\n    gia9x2: Yup.number(),\r\n    gia9x1: Yup.number(),\r\n});\r\n\r\nexport const ResultForm: React.FC = () => (\r\n    <>\r\n        <Formik\r\n            initialValues={INITIAL_VALUES}\r\n            validationSchema={FormSchema}\r\n            onSubmit={values => {\r\n                console.log(values);\r\n            }}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur, handleSubmit,\r\n              }) => (\r\n                <FormikForm>\r\n                    <Form.Group controlId=\"formName\">\r\n                        <Form.Label>Имя :</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Имя\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.name}\r\n                            className={touched.name && errors.name ? \"error\" : \"\"}\r\n                        />\r\n                        {touched.name && errors.name ? (\r\n                            <ErrorDiv>{errors.name}</ErrorDiv>\r\n                        ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formLastName\">\r\n                        <Form.Label>Фамилия :</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Фамилия\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.lastName}\r\n                            className={touched.lastName && errors.lastName ? \"error\" : \"\"}\r\n                        />\r\n                        {touched.lastName && errors.lastName ? (\r\n                            <ErrorDiv>{errors.lastName}</ErrorDiv>\r\n                        ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Div className=\"row\">\r\n                        <Div className=\"col-md-6\">\r\n                            Результаты ГИА - 9\r\n                        </Div>\r\n                        <Div className=\"col-md-6\">\r\n                            <InputGroup size=\"sm\" className=\"mb-1\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Оценка \"5\"</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"gia9x5\"\r\n                                    placeholder=\"\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gia9x5}\r\n                                />\r\n                                {touched.gia9x5 && errors.gia9x5 ? (\r\n                                    <ErrorDiv>{errors.gia9x5}</ErrorDiv>\r\n                                ) : null}\r\n                            </InputGroup>\r\n                            <InputGroup size=\"sm\" className=\"mb-1\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Оценка \"4\"</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"gia9x4\"\r\n                                    placeholder=\"\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gia9x4}\r\n                                />\r\n                            </InputGroup>\r\n                            <InputGroup size=\"sm\" className=\"mb-1\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Оценка \"3\"</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"gia9x3\"\r\n                                    placeholder=\"\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gia9x3}\r\n                                />\r\n                            </InputGroup>\r\n                            <InputGroup size=\"sm\" className=\"mb-1\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Оценка \"2\"</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"gia9x2\"\r\n                                    placeholder=\"\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gia9x2}\r\n                                />\r\n                            </InputGroup>\r\n                            <InputGroup size=\"sm\" className=\"mb-1\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Оценка \"1\"</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"gia9x1\"\r\n                                    placeholder=\"\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gia9x1}\r\n                                />\r\n                            </InputGroup>\r\n                        </Div>\r\n                    </Div>\r\n\r\n                    <Button type='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    </>\r\n)\r\n","import React from \"react\";\r\nimport {PageWrapper} from \"./styles/home-styles\";\r\nimport {ResultForm} from \"../components/form\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n    return (\r\n        <PageWrapper>\r\n            <ResultForm/>\r\n        </PageWrapper>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {HomePage} from \"./pages/home\";\n\nfunction App() {\n  return (\n    <HomePage/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}